{"version":3,"sources":["components/Container/Container.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","Container","title","children","className","s","container","Section","section","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","haldleSubmit","preventDefault","props","onSubmit","reset","this","onChange","text","type","pattern","required","input","disabled","button","Component","Filter","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","App","filter","addContact","contact","shortid","generate","includes","alert","prevState","changeFilter","getVisibleContacts","normalizeFilter","toLowerCase","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ee1f808.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3jcKc\",\"title\":\"Container_title__2M02G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Sm0BT\",\"title\":\"Section_title__3sGKg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2wQBA\",\"text\":\"Filter_text__1GurN\",\"input\":\"Filter_input__1XJFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactForm_text__1UCuV\",\"input\":\"ContactForm_input__33gQl\",\"button\":\"ContactForm_button__38ZZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3QYKy\",\"item\":\"ContactList_item__2pSNq\",\"name\":\"ContactList_name__tiFoB\",\"button\":\"ContactList_button__3Xl95\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <section className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  haldleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const onChange = this.handleChange;\r\n    const onSubmit = this.haldleSubmit;\r\n\r\n    return (\r\n      <form onSubmit={onSubmit}>\r\n        <label>\r\n          <p className={s.text}>Name</p>\r\n          <input\r\n            type='text'\r\n            name='name'\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            className={s.input}\r\n            value={name}\r\n            onChange={onChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          <p className={s.text}>Number</p>\r\n          <input\r\n            type='tel'\r\n            name='number'\r\n            pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n            title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n            required\r\n            className={s.input}\r\n            value={number}\r\n            onChange={onChange}\r\n          />\r\n        </label>\r\n        <button type='submit' disabled={!name} className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <p className={s.text}>Find contacts by name</p>\r\n    <input\r\n      type='text'\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      required\r\n      className={s.input}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={s.item}>\r\n        <p className={s.name}>{name}:</p>\r\n        <p className={s.number}>{number}</p>\r\n        <button\r\n          type='button'\r\n          className={s.button}\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Container from 'components/Container';\nimport Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    contacts.map(contact => contact.name).includes(name)\n      ? alert(`${name} is already in contacts.`)\n      : this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n\n    // contacts !== prevState.contacts &&\n    //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  }\n\n  render() {\n    const { filter } = this.state;\n    const addContact = this.addContact;\n    const changeFilter = this.changeFilter;\n    const visibleContacts = this.getVisibleContacts();\n    const onDeleteContact = this.deleteContact;\n\n    return (\n      <Container title='Телефонная книга'>\n        <Section title='Phonebook'>\n          <ContactForm onSubmit={addContact} />\n        </Section>\n        <Section title='Contacts'>\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={onDeleteContact}\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}